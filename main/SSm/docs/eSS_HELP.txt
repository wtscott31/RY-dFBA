function [Results]=ess_kernel(problem,opts,varargin)
Function   : eSS Release 2010A
Written by : Process Engineering Group IIM-CSIC (jegea@iim.csic.es)
Created on : 12/03/2008
Last Update: 11/10/2010
Email      : gingproc@iim.csic.es

(c) CSIC, Spanish Council for Scientific Research

Global optimization algorithm for MINLP's based on Scatter Search

  eSS attempts to solve problems of the form:
      min F(x)  subject to:  ceq(x) = 0 (equality constraints)
       x                     c_L <= c(x) <= c_U (inequality constraints)
                             x_L <= x <= x_U (bounds on the decision variables)

Constraint functions, if applicable, must be declared in the same script as the
objective function as a second output argument:
e.g., [f,c]=myfunction(x)
      f=objective function value
      g=vector containing the constraints
      return

Please have a look at the manual before using eSS

      USAGE: Results=ess_kernel(problem,opts,p1,p2,....,pn);

INPUT PARAMETERS:
****************
  problem - Structure containing problem settings
      problem.f   = Name of the file containing the objective
                    function (String)
      problem.x_L = Lower bounds of decision variables (vector)
      problem.x_U = Upper bounds of decision variables (vector)
      problem.x_0 = Initial point(s) (optional; vector or matrix)

      Additionally, fill the following fields if your problem has
      non-linear constraints
      problem.neq     = Number of equality constraints (Integer; do not define it
                        if there are no equality constraints)
      problem.c_L     = Lower bounds of nonlinear inequality constraints
                       (vector)
      problem.c_U     = Upper bounds of nonlinear inequality constraints
                        (vector)
      problem.int_var = Number of integer variables (Integer)
      problem.bin_var = Number of binary variables  (Integer)
      problem.vtr     = Objective function value to be reached (optional)

NOTE: The order of decision variables is x=[cont int bin]

  opts - Structure containing options (if set as opts=[] defaults options
         will be loaded) Type "ssm_kernel" or "ssm_kernel('defaults')" to
         get the default options

      User options
          opts.maxeval    = Maximum number of function evaluations
                            (Default 1000)
          opts.maxtime    = Maximum CPU time in seconds (Default 60)
          opts.iterprint  = Print each iteration on screen: 0-Deactivated
                            1-Activated (Default 1)
          opts.plot       = Plots convergence curves: 0-Deactivated,
                            1-Plot curves on line, 2-Plot final results
                            (Default 0)
          opts.weight     = Weight that multiplies the penalty term added
                            to the objective function in constrained
                            problems (Default 1e6)
          opts.log_var    = Indexes of the variables which will be used
                            to generate diverse solutions in different
                            orders of magnitude (vector)
          opts.tolc       = Maximum absolute violation of the constraints
                            (Default 1e-5)
          opts.prob_bound = Probability (0-1) of biasing the search towards
                            the bounds (Default 0.5)
          opts.inter_save = Saves results in a mat file in intermediate
                            iterations. Useful for very long runs
                            (Binary; Default = 0)

      Global options
          opts.dim_refset         = Number of elements in Refset
                                    (Integer; automatically calculated)
          opts.ndiverse           = Number of solutions generated by the
                                    diversificator (Default 10*nvar)
          opts.combination        = Type of combination of Refset
                                    elements (Default 1)
                                    1: hyper-rectangles
                                    2: linear combinations

      Local options
          opts.local.solver               = Choose local solver
                                            0: Local search deactivated
                                            'fmincon'(Default),
                                            'fminsearch', 'solnp'
                                            'n2fb','dn2fb','dhc','hooke'
                                            'ipopt','misqp','lsqnonlin'
          opts.local.tol                  = Level of tolerance in local
                                            search
          opts.local.iterprint            = Print each iteration of local
                                            solver on screen (Binary;
                                            default = 0)
          opts.local.n1                   = Number of iterations
                                            before applying
                                            local search for the 1st time
                                            (Default 1)
          opts.local.n2                   = Minimum number of iterations
                                            in the global
                                            phase between 2 local calls
                                            (Default 10)
          opts.local.balance              = Balances between quality (=0)
                                            and diversity (=1) for
                                            choosing initial points for
                                            the local search (default
                                            0.5)
          opts.local.finish               = Applies local search to the
                                            best solution found once the
                                            optimization if finished
                                            (same values as
                                            opts.local.solver)
          opts.local.bestx                = When activated (i.e. =1) only
                                            applies local search to the
                                            best solution found to
                                            date,ignoring filters
                                            (Default=0)


  p1,p2... :  optional input parameters to be passed to the objective
  function


OUTPUT PARAMETERS:
*****************
A file called "ssm_report.mat" is generated containing.

  problem - Structure containing problem settings
  opts    - Structure containing all options
  Results - Structure containing results

Fields in Results
      Results.fbest                   = Best objective function value
                                        found after the optimization
      Results.xbest                   = Vector providing the best
                                        function value
      Results.cpu_time                = Time in seconds consumed in the
                                        optimization
      Results.f                       = Vector containing the best
                                        objective function value after each
                                        iteration
      Results.x                       = Matrix containing the best vector
                                        after each iteration
      Results.time                    = Vector containing the cpu time
                                        consumed after each iteration
      Results.neval                   = Vector containing the number of
                                        function evaluations after each
                                        iteration
      Results.numeval                 = Number of function evaluations
      Results.local_solutions         = Local solutions found by the
                                        local solver (in rows)
      Results.local_solutions_values  = Function values of the local
                                        solutions
      Results.end_crit                = Criterion to finish the
                                        optimization
                                        1: Maximal number of function
                                        evaluations achieved
                                        2: Maximum allowed CPU Time
                                        achieved
                                        3: Value to reach achieved

             NOTE: To plot convergence curves type:
             stairs(Results.time,Results.f) or stairs(Results.neval,Results.f)
REFERENCES

If you use eSS and publish the results, please cite the following papers:

Egea, J.A., Balsa-Canto, E., García, M.S.G., Banga, J.R. (2009) Dynamic
optimization of nonlinear processes with an enhanced scatter search
method. Industrial & Engineering Chemistry Research 49(9): 4388-4401.

Egea, J.A., Martí, R., Banga, J.R. (2010) An evolutionary method for
complex-process optimization. Computers & Operations Research 37(2):
315-324.